@model Catalogue_re.Web.Models.ViewModels.DepartmentVM

@{
    ViewBag.Title = "Добавление отдела";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div id="se-pre-con" style="display:none;"></div>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="header">
                    <h2>Добавление отдела</h2>
                </div>
                <div class="content">
                    @using (Html.BeginForm("Create", "Department", FormMethod.Post, new { enctype = "multipart/form-data", id = "create-form" }))
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <!-- Field DepartmentName with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger validation-span" })
                            </div>
                        </div>
                        <!-- Field ComboBox AdministrationId with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.AdministrationId, "Орган управления", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("AdministrationId", null, "Выберите орган управления...", htmlAttributes: new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.AdministrationId, "", new { @class = "text-danger validation-span" })
                            </div>
                        </div>

                        <!-- Field DepartmentPost with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Post, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Post, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                @Html.ValidationMessageFor(model => model.Post, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field DepartmentAddress with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field DepartmentFax with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field AdministrationEMail with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field AdministrationSkype with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Skype, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Skype, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Skype, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field AdministrationCode with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <!-- Buttons Add and Back -->
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Добавить" class="btn btn-default" id="btn" /> |
                                <a class="btn btn-default" name="backButton" id="backButton" href="@Url.Action("Index","Department")">Назад</a>
                            </div>
                        </div>
                    </div>
                    }
                    @Scripts.Render("~/bundles/jquery")
                    @Scripts.Render("~/bundles/jqueryval")
                </div>
            </div>
        </div>
    </div>
</div>