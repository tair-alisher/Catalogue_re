@model Catalogue.Models.Tables.Employee

@{
    ViewBag.Title = "Редактирование сотрудника";
    Layout = "~/Views/Shared/_AminPanel.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="header">
                    <h2>Редактирование сотрудника</h2>
                </div>
                <div class="content">
                   @using (Html.BeginForm("Edit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
                   {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.EmployeeId)

                        <!-- Field EmployeeFullName with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeFullName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeeFullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmployeeFullName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field EmployeeRoom with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeRoom, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeeRoom, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmployeeRoom, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field EmployeeAddress with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeeAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmployeeAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field EmployeePhone with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeePhone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeePhone, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                @Html.ValidationMessageFor(model => model.EmployeePhone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field EmployeePersonalPhone with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeePersonalPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeePersonalPhone, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                @Html.ValidationMessageFor(model => model.EmployeePersonalPhone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field EmployeeEmail with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeeEmail, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmployeeEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field EmployeeSkype with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeSkype, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeeSkype, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmployeeSkype, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field ComboBox PositionId with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.PositionId, "Должность", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.PositionId, ViewBag.PositionList as SelectList, "Выберите должность...")
                                @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field ComboBox DepartmentId with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.DepartmentId, "Отедл", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.DepartmentId, ViewBag.DepartmentList as SelectList, "Выберите отдел...")
                                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- Field DateAdoption with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.DateAdoption, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateAdoption, new { htmlAttributes = new { @class = "date-picker" } })
                            </div>
                        </div>
                        <!-- Field DateDismissal with Validation -->
                        <div class="form-group">
                            @Html.LabelFor(model => model.DateDismissal, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateDismissal, new { htmlAttributes = new { @class = "date-picker", @id = "dateDis" } })
                            </div>
                        </div>
                        <!-- Image EmployeePhoto and Preview -->
                        <div class="form-group">
                            <div class="row">
                                @Html.LabelFor(model => model.EmployeePhoto, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <img src="~/images/@Model.EmployeePhoto" class="img-responsive col-md-1" style="width:110px; height:110px;" />
                                    @Html.ValidationMessageFor(model => model.EmployeePhoto, "", new { @class = "text-danger" })                          
                                <div id="imgPreview" class="col-md-4" style="display:none;">
                                    <i class="fa fa-arrow-right fa-3x"  style="float: left; position: inherit; margin-top: 8%; padding-right: 9%;"></i>
                                    <img class="img-responsive" id="targetImg" style="width:100px; height:100px;"/>
                                </div>
                            </div>
                          
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="file" name="productImg" id="imageBrowes" class="btn btn-default" style="display:inline-block;" accept="image/x-png,image/gif,image/jpeg"/>
                                    <input type="button" value="Сброс" id="imageBrowes"  class="btn btn-default" onclick="ClearPreview()" />
                                    <input type="hidden" name="photo" value="@Model.EmployeePhoto"/>                                   
                                </div>
                            </div>
                            <!-- Buttons Save and Clear -->
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Сохранить" class="btn btn-default" /> |
                                    <a class="btn btn-default" name="backButton" id="backButton" href="@Url.Action("Index","Employee")">Назад</a>
                                </div>
                            </div>
                        </div>
                        <!-- Modal window for image size 2MB-->
                        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Ошибка</h5>
                                    </div>
                                    <div class="modal-body">
                                        <span id="MessageError"></span> 
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                                    </div>
                                </div>
                            </div>
                        </div>                        
                    </div>
                   }
                @Scripts.Render("~/bundles/jquery")
                @Scripts.Render("~/bundles/jqueryval")
                @Scripts.Render("~/Scripts/app.js")
                    <script>
                        checkPhotoPreview();
                    </script>         
                </div>
            </div>
        </div>
    </div>
</div>